{"version":3,"sources":["webpack:///./src/components/blog-related.js","webpack:///./src/templates/blog-post.js"],"names":["RelatedPosts","tags","title","relatedPosts","useStaticQuery","allMarkdownRemark","edges","filter","edge","node","frontmatter","i","length","indexOf","slice","className","map","row","index","key","to","slug","thumnail","fluid","childImageSharp","imgStyle","objectFit","objectPosition","src","thumnailImage","alt","pageQuery","BlogPostTemplate","data","location","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","siteUrl","previous","next","tagItems","tag","class","kebabCase","thumnailHtml","thumnailOgImage","description","excerpt","image","itemScope","itemType","itemProp","date","url","dangerouslySetInnerHTML","__html","html","rel"],"mappings":"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","file":"component---src-templates-blog-post-js-bda17ffe353d499167de.js","sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport Image from \"gatsby-image\";\nimport thumnailImage from \"../images/thumnail.jpg\";\n\nexport const RelatedPosts = ({ tags, title }) => {\n  // 全記事のデータを取得\n  const data = useStaticQuery(graphql`\n    query blogRelatedPostsQuery {\n      allMarkdownRemark(\n          filter: { frontmatter: { category: { in: [\"blog\"] } } }\n      ) {\n        edges {\n          node {\n            id\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              tags\n              slug\n              thumnail {\n                childImageSharp {\n                  fluid(maxWidth: 338) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  // 条件に一致する関連記事のみを絞り込む\n    const relatedPosts = data.allMarkdownRemark.edges.filter(edge => {\n        if (edge.node.frontmatter.title === title) {\n        return false;\n    }\n    for (let i = 0; i < tags.length; i++) {\n        if (edge.node.frontmatter.tags.indexOf(tags[i]) >= 0) {\n            return true;\n        }\n    }\n        return false;\n    });\n\n    // 関連記事があれば表示する\n    if (!relatedPosts.length) {\n        return null;\n    }\n\n    const relatedPost4 = relatedPosts.slice(0, 6);\n\n  return (\n    <div className=\"mt-80\">\n        <p className=\"mt-60\">関連記事</p>\n        <ul className=\"blog-post-nav d-flex flex-wrap\">\n        {relatedPosts.map((row, index) => (\n            <li className=\"col-md-4 col-6 pl-10 pr-10\" key={index}>\n                <Link to={`/${row.node.frontmatter.slug}`}>\n                    {row.node.frontmatter.thumnail\n                        ? <Image fluid={row.node.frontmatter.thumnail.childImageSharp.fluid} imgStyle={{objectFit: \"cover\",objectPosition:\"50% 50%\"}}/>\n                        : <div className=\"gatsby-image-wrapper\"><img src={thumnailImage} alt=\"\" className=\"default-thumnail\" /></div>\n                    }\n                    <span>{row.node.frontmatter.title}</span>\n                </Link>\n            </li>\n        ))}\n    </ul>\n  </div>\n  );\n};\n\nexport default RelatedPosts\n","import React from \"react\"\nimport {Link, graphql} from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Share from \"../components/share\";\nimport RelatedPosts from \"../components/blog-related\";\n\nimport Image from \"gatsby-image\";\nimport kebabCase from \"lodash/kebabCase\"\n\nimport thumnailImage from \"../images/thumnail.jpg\";\n\nconst BlogPostTemplate = ({data, pageContext, location}) => {\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata\n        ?.title || `Title`\n    const siteUrl = data.site.siteMetadata.siteUrl;\n    const slug    = post.frontmatter.slug;\n    const {previous, next} = data\n\n    const tags = post.frontmatter.tags\n    const tagItems = tags.map((tag) => <li class=\"col\"><Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link></li>)\n\n    const thumnailHtml = post.frontmatter.thumnail\n        ? <Image fluid={post.frontmatter.thumnail.childImageSharp.fluid}/>\n        : ''\n    const thumnailOgImage = post.frontmatter.thumnail\n        ? `${siteUrl}${post.frontmatter.thumnail.childImageSharp.fluid.src}`\n        : `${siteUrl}${thumnailImage}`\n\n    return (<Layout location={location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} image={thumnailOgImage}/>\n        <article className=\"blog-post container-2\" itemScope=\"itemScope\" itemType=\"http://schema.org/Article\">\n            <header className=\"text-center\">\n                <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n                <p className=\"datetime\">{post.frontmatter.date}</p>\n                <ul class=\"tag-group d-flex flex-wrap justify-content-center\">\n                    {tagItems}\n                </ul>\n                <Share title={post.frontmatter.title} url={`${siteUrl}/${slug}`} description={post.excerpt} />\n                <figure>\n                    <div className=\"posts__image\">\n                        {thumnailHtml}\n                    </div>\n                </figure>\n            </header>\n            <section className=\"articleBody\" dangerouslySetInnerHTML={{\n                    __html: post.html\n                }} itemProp=\"articleBody\"/>\n        </article>\n        <nav className=\"blog-post-nav container-2 mt-80\">\n            <RelatedPosts tags={post.frontmatter.tags} title={post.frontmatter.title}></RelatedPosts>\n            <p className=\"mt-60\">直近の記事</p>\n            <ul className=\"d-flex\">\n                <li className=\"col-6 pl-10 pr-10\">\n                    {\n                        previous && (<Link to={`/${previous.frontmatter.slug}`} rel=\"prev\">\n                            {previous.frontmatter.thumnail\n                                ? <Image fluid={previous.frontmatter.thumnail.childImageSharp.fluid} imgStyle={{objectFit: \"cover\",objectPosition:\"50% 50%\"}}/>\n                                : <div className=\"gatsby-image-wrapper\"><img src={thumnailImage} alt=\"\" className=\"default-thumnail\" /></div>\n                            }\n                            <span>{previous.frontmatter.title}</span>\n                        </Link>)\n                    }\n                </li>\n                <li className=\"col-6 pl-10 pr-10\">\n                    {\n                        next && (<Link to={`/${next.frontmatter.slug}`} rel=\"next\">\n                            {next.frontmatter.thumnail\n                                ? <Image fluid={next.frontmatter.thumnail.childImageSharp.fluid} imgStyle={{objectFit: \"cover\",objectPosition:\"50% 50%\"}}/>\n                                : <div className=\"gatsby-image-wrapper\"><img src={thumnailImage} alt=\"\" className=\"default-thumnail\" /></div>\n                            }\n                            <span>{next.frontmatter.title}</span>\n                        </Link>)\n                    }\n                </li>\n            </ul>\n        </nav>\n    </Layout>)\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql `\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY年MM月DD日\")\n        description\n        slug\n        tags\n        thumnail {\n          childImageSharp {\n            fluid(maxWidth: 1280) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    previous: markdownRemark(\n        id: { eq: $previousPostId }\n    ) {\n        fields {\n          slug\n        }\n      frontmatter {\n        title\n        slug\n        thumnail {\n          childImageSharp {\n            fluid(maxWidth: 320) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    next: markdownRemark(\n        id: { eq: $nextPostId }\n    ) {\n        fields {\n          slug\n        }\n      frontmatter {\n        title\n        slug\n        thumnail {\n          childImageSharp {\n            fluid(maxWidth: 320) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}