{"version":3,"sources":["webpack:///./src/components/works-related.js","webpack:///./src/templates/works-post.js"],"names":["RelatedPosts","tags","title","relatedPosts","useStaticQuery","allMarkdownRemark","edges","filter","edge","node","frontmatter","i","length","indexOf","slice","className","map","row","index","key","to","fields","slug","itemProp","fluid","thumnail","childImageSharp","pageQuery","WorksPostTemplate","data","location","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","previous","next","tagItems","tag","class","kebabCase","siteUrl","description","excerpt","itemScope","itemType","date","url","dangerouslySetInnerHTML","__html","tableOfContents","html","rel"],"mappings":"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","file":"component---src-templates-works-post-js-45226c27c5ea3e37586e.js","sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport Image from \"gatsby-image\";\n\nexport const RelatedPosts = ({ tags, title }) => {\n  // 全記事のデータを取得\n  const data = useStaticQuery(graphql`\n    query worksRelatedPostsQuery {\n      allMarkdownRemark(\n          filter: { frontmatter: { category: { in: [\"works\"] } } }\n      ) {\n        edges {\n          node {\n            id\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              tags\n              thumnail {\n                childImageSharp {\n                  fluid(maxWidth: 338) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  // 条件に一致する関連記事のみを絞り込む\n    const relatedPosts = data.allMarkdownRemark.edges.filter(edge => {\n        if (edge.node.frontmatter.title === title) {\n        return false;\n    }\n    for (let i = 0; i < tags.length; i++) {\n        if (edge.node.frontmatter.tags.indexOf(tags[i]) >= 0) {\n            return true;\n        }\n    }\n        return false;\n    });\n\n    // 関連記事があれば表示する\n    if (!relatedPosts.length) {\n        return null;\n    }\n\n    const relatedPost4 = relatedPosts.slice(0, 6);\n\n  return (\n    <div className=\"mt-80\">\n      <h2>関連記事</h2>\n        <ul className=\"blog-post-nav d-md-flex flex-wrap\">\n        {relatedPosts.map((row, index) => (\n            <li className=\"col-md-6 pl-10 pr-10\" key={index}>\n                <Link to={row.node.fields.slug} itemProp=\"url\">\n                    <Image fluid={row.node.frontmatter.thumnail.childImageSharp.fluid}/>\n                    <span>{row.node.frontmatter.title}</span>\n                </Link>\n            </li>\n        ))}\n    </ul>\n  </div>\n  );\n};\n\nexport default RelatedPosts\n","import React from \"react\"\nimport {Link, graphql} from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Share from \"../components/share\";\nimport RelatedPosts from \"../components/works-related\";\n\nimport Image from \"gatsby-image\";\nimport kebabCase from \"lodash/kebabCase\"\n\nconst WorksPostTemplate = ({data, pageContext, location}) => {\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata\n        ?.title || `Title`\n    const {previous, next} = data\n    const tags = post.frontmatter.tags\n    const tagItems = tags.map((tag) => <li class=\"col\">\n        <Link to={`/works-tags/${kebabCase(tag)}/`}>{tag}</Link>\n    </li>)\n    const siteUrl = data.site.siteMetadata.siteUrl;\n    const slug    = post.frontmatter.slug;\n\n    return (<Layout location={location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt}/>\n        <article className=\"blog-post container-2\" itemScope=\"itemScope\" itemType=\"http://schema.org/Article\">\n            <header className=\"text-center\">\n                <figure>\n                    <div className=\"posts__image\">\n                        <Image className=\"\" fluid={post.frontmatter.thumnail.childImageSharp.fluid}/>\n                    </div>\n                </figure>\n                <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n                <p className=\"datetime\">{post.frontmatter.date}</p>\n                <ul class=\"tagname d-flex flex-wrap justify-content-center\">\n                    {tagItems}\n                </ul>\n                <Share title={post.frontmatter.title} url={`${siteUrl}${slug}`} description={post.excerpt} />\n            </header>\n            <div className=\"posts-index\" dangerouslySetInnerHTML={{__html: post.tableOfContents}}/>\n            <section className=\"articleBody\" dangerouslySetInnerHTML={{\n                    __html: post.html\n                }} itemProp=\"articleBody\"/>\n        </article>\n        <nav className=\"blog-post-nav container-2 mt-80\">\n            <RelatedPosts tags={post.frontmatter.tags} title={post.frontmatter.title}></RelatedPosts>\n            <ul className=\"d-md-flex\">\n                <li className=\"col-md-6 pl-10 pr-10\">\n                    {\n                        previous && (<Link to={`/${previous.frontmatter.slug}`} rel=\"prev\">\n                            <Image fluid={previous.frontmatter.thumnail.childImageSharp.fluid}/>\n                            <span>{previous.frontmatter.title}</span>\n                        </Link>)\n                    }\n                </li>\n                <li className=\"col-md-6 pl-10 pr-10\">\n                    {\n                        next && (<Link to={`/${next.frontmatter.slug}`} rel=\"next\">\n                            <Image fluid={next.frontmatter.thumnail.childImageSharp.fluid}/>\n                            <span>{next.frontmatter.title}</span>\n                        </Link>)\n                    }\n                </li>\n            </ul>\n        </nav>\n    </Layout>)\n}\n\nexport default WorksPostTemplate\n\nexport const pageQuery = graphql `\n  query WorksPostBySlug(\n    $id: String!\n    $previousWorksId: String\n    $nextWorksId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY年MM月DD日\")\n        description\n        slug\n        tags\n        thumnail {\n          childImageSharp {\n            fluid(maxWidth: 1280) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      tableOfContents\n    }\n    previous: markdownRemark(id: { eq: $previousWorksId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        slug\n        thumnail {\n          childImageSharp {\n            fluid(maxWidth: 320) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    next: markdownRemark(id: { eq: $nextWorksId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        slug\n        thumnail {\n          childImageSharp {\n            fluid(maxWidth: 320) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}